{"version":3,"sources":["MovieCard/movieCard.module.scss","Header/SearchBar/searchBar.module.scss","Wrapper/wrapper.module.scss","MovieGroup/movieGroup.module.scss","Backdrop/backdrop.module.scss","Header/header.module.scss","MovieList/MovieSmallPreview/movieSmallPreview.module.scss","MovieList/movieList.module.scss","PageLoader/pageLoader.module.scss","PageError/pageError.module.scss","NothingFound/nothingFound.module.scss","MovieCard/Stars/stars.module.scss","PageNotFound/pageNotFound.module.scss","shared/api.ts","shared/utils.ts","Header/SearchBar/index.tsx","Header/index.tsx","Wrapper/index.tsx","MovieList/MovieSmallPreview/index.tsx","MovieList/index.tsx","MovieGroup/index.tsx","PageLoader/index.tsx","PageError/index.tsx","NothingFound/index.tsx","FilteredMovieList/index.tsx","shared/useQueryParams.ts","MovieCard/Stars/Star/index.tsx","MovieCard/Stars/index.tsx","MovieCard/index.tsx","shared/useSlug.ts","MovieFromSlug/index.tsx","Backdrop/index.tsx","PageNotFound/index.tsx","App/index.tsx","reportWebVitals.js","index.tsx"],"names":["module","exports","requestInit","headers","Authorization","fetchMovies","fetch","then","res","json","groupMoviesByGenre","movies","arr","genreMoviePairs","flatMap","movie","genres","Set","map","genre","moviesOfThisGenre","filter","includes","Object","fromEntries","formatArrayWithComma","join","SearchBar","useState","value","setValue","history","useHistory","historyPush","useDebouncedCallback","push","className","styles","wrapper","searchButton","onClick","type","placeholder","aria-label","onChange","currentTarget","onKeyDown","key","Header","to","Wrapper","props","thrasherPreventer","mainWrapper","children","MovieSmallPreview","width","slug","src","poster","alt","title","id","MovieList","MovieGroup","groupedMovies","entries","sort","a","b","nameA","toUpperCase","nameB","sortByName","genreHeader","PageLoader","PageError","NothingFound","FilteredMovieList","query","URLSearchParams","useLocation","search","searchTerm","get","useQuery","searchMovies","enabled","isLoading","data","useEffect","length","Star","painted","style","viewBox","xmlns","d","xlinkHref","fill","stroke","strokeWidth","Stars","rating","Array","_","idx","MovieCard","max","newMax","Math","floor","mapRating","imdb_rating","formattedDirectors","isArray","director","textColumn","titleRating","released_on","Date","getFullYear","cast","description","overview","useSlug","useRouteMatch","params","find","MovieFromSlug","Backdrop","backdrop","backgroundImage","PageNotFound","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","queryClient","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","client","process","document","getElementById"],"mappings":"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","file":"static/js/main.13a1789f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"movieCard_description__7gDPS\",\"wrapper\":\"movieCard_wrapper__3KlcW\",\"poster\":\"movieCard_poster__2GQ_K\",\"textColumn\":\"movieCard_textColumn__1cJbF\",\"titleRating\":\"movieCard_titleRating__2_699\",\"title\":\"movieCard_title__3Q-U3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"searchBar_wrapper__GOqOj\",\"searchButton\":\"searchBar_searchButton__3ypQE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"wrapper_mainWrapper__3RBAW\",\"thrasherPreventer\":\"wrapper_thrasherPreventer__RI7n0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"movieGroup_wrapper__3EqC8\",\"genreHeader\":\"movieGroup_genreHeader__1d9r6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"backdrop_wrapper__15DkI\",\"backdrop\":\"backdrop_backdrop__3NtMK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"header_wrapper__2GQkS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"movieSmallPreview_wrapper__JbKY2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"movieList_wrapper__3RaTw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"pageLoader_wrapper__y3mEt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"pageError_wrapper__3khJu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"nothingFound_wrapper__VnP67\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"stars_description__ufTS9\",\"wrapper\":\"stars_wrapper__2qk2Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"pageNotFound_wrapper__1z-1X\"};","import type { MovieList } from './types';\n\nconst requestInit = {\n  headers: {\n    Authorization: 'Bearer Wookie2019',\n  },\n};\n\nexport const fetchMovies = () =>\n  fetch(\n    'https://wookie.codesubmit.io/movies',\n    requestInit,\n  ).then(res => res.json() as Promise<MovieList>);\n\nexport const searchMovies = (query: string) =>\n  fetch(\n    'https://wookie.codesubmit.io/movies?q=' + query,\n    requestInit,\n  ).then(res => res.json() as Promise<MovieList>);\n","import type { Genre, MovieEntry } from './types';\n\nexport function uniq<T>(arr: T[]): T[] {\n  return [...new Set(arr)];\n}\nexport function groupMoviesByGenre(\n  movies: MovieEntry[],\n): Record<Genre, MovieEntry[]> {\n  // Less performant than an imperative solution, but perhaps more readable\n  const genres = uniq(movies.flatMap(movie => movie.genres));\n  const genreMoviePairs = genres.map(genre => {\n    const moviesOfThisGenre = movies.filter(movie =>\n      movie.genres.includes(genre),\n    );\n    return [genre, moviesOfThisGenre] as const;\n  });\n  return Object.fromEntries(genreMoviePairs);\n}\nexport function sortByName(a: string, b: string) {\n  const nameA = a.toUpperCase();\n  const nameB = b.toUpperCase();\n  if (nameA < nameB) {\n    return -1;\n  }\n  if (nameA > nameB) {\n    return 1;\n  }\n\n  // names must be equal\n  return 0;\n}\nexport function getYear(d: string) {\n  return new Date(d).getFullYear();\n}\nexport function mapRating(rating: number, max: number, newMax: number): number {\n  return Math.floor((rating * newMax) / max);\n}\nexport function formatArrayWithComma(arr: string[]): string {\n  return arr.join(', ');\n}\n","import { useState } from 'react';\nimport styles from './searchBar.module.scss';\nimport { useHistory } from 'react-router-dom';\nimport { useDebouncedCallback } from 'use-debounce';\n\nconst SearchBar = () => {\n  const [value, setValue] = useState('');\n  const history = useHistory();\n  function _historyPush(value: string) {\n    if (!value) {\n      history.push('');\n    } else {\n      history.push(`/search?query=${value}`);\n    }\n  }\n  const historyPush = useDebouncedCallback(_historyPush, 500);\n\n  return (\n    <div className={styles.wrapper}>\n      <button\n        className={styles.searchButton}\n        onClick={() => historyPush(value)}\n      ></button>\n      <input\n        type=\"search\"\n        value={value}\n        placeholder=\"Search\"\n        aria-label=\"Search through movies\"\n        onChange={({ currentTarget: { value } }) => {\n          setValue(value);\n          historyPush(value);\n        }}\n        onKeyDown={({ key }) => key === 'Enter' && historyPush(value)}\n      />\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import SearchBar from './SearchBar';\nimport styles from './header.module.scss';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n  return (\n    <div className={styles.wrapper}>\n      <Link to=\"/\">\n        <h1>Wookie<br />Movies</h1>\n      </Link>\n      <SearchBar />\n    </div>\n  );\n};\n\nexport default Header;\n","import type { PropsWithChildren } from 'react';\nimport styles from './wrapper.module.scss';\n\ntype Props = {};\nconst Wrapper = (props: PropsWithChildren<Props>) => {\n  return (\n    <div className={styles.thrasherPreventer}>\n      <div className={styles.mainWrapper}>\n        {props.children}\n      </div>\n    </div>\n  );\n};\n\nexport default Wrapper;\n","import type { MovieEntry } from '../../shared/types';\nimport { Link } from 'react-router-dom';\nimport styles from './movieSmallPreview.module.scss';\n\ntype Props = {\n  movie: MovieEntry;\n  width?: number;\n};\n\nconst MovieSmallPreview = ({ movie, width = 200 }: Props) => {\n  return (\n    <Link\n      className={styles.wrapper}\n      key={movie.id}\n      to={`details/${movie.slug}`}\n    >\n      <img width={width} src={movie.poster} alt={movie.title}></img>\n    </Link>\n  );\n};\n\nexport default MovieSmallPreview;\n","import type { MovieEntry } from '../shared/types';\nimport MovieSmallPreview from './MovieSmallPreview';\nimport styles from './movieList.module.scss';\n\ntype Props = {\n  movies: MovieEntry[];\n};\n\nconst MovieList = ({ movies }: Props) => {\n  return (\n    <div className={styles.wrapper}>\n      {movies.map(movie => (\n        <MovieSmallPreview key={movie.id} movie={movie} />\n      ))}\n    </div>\n  );\n};\n\nexport default MovieList;\n","import type { Genre, MovieEntry } from '../shared/types';\nimport styles from './movieGroup.module.scss';\nimport { sortByName } from '../shared/utils';\nimport MovieList from '../MovieList';\n\ntype Props = {\n  groupedMovies: Record<Genre, MovieEntry[]>;\n};\n\nconst MovieGroup = ({ groupedMovies }: Props) => {\n  return (\n    <div className={styles.wrapper}>\n      {Object.entries(groupedMovies)\n        .sort(([genre1], [genre2]) => sortByName(genre1, genre2))\n        .map(([genre, movies]) => (\n          <div key={genre}>\n            <h3 className={styles.genreHeader}>{genre}</h3>\n            <MovieList movies={movies} />\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default MovieGroup;\n","import styles from './pageLoader.module.scss';\n\nconst PageLoader = () => <div className={styles.wrapper}>Loading...</div>;\n\nexport default PageLoader;\n","import styles from './pageError.module.scss';\n\nconst PageError = () => (\n  <div className={styles.wrapper}>\n    Something went wrong, please refresh the page :(\n  </div>\n);\n\nexport default PageError;\n","import styles from './nothingFound.module.scss';\n\nconst NothingFound = () => <div className={styles.wrapper}>Nothing Found!</div>;\n\nexport default NothingFound;\n","import { useEffect } from 'react';\nimport MovieList from '../MovieList';\nimport useQueryParams from '../shared/useQueryParams';\nimport { useHistory } from 'react-router-dom';\nimport { useQuery } from 'react-query';\nimport { searchMovies } from '../shared/api';\n\nimport PageLoader from '../PageLoader';\nimport PageError from '../PageError';\nimport NothingFound from '../NothingFound';\n\nconst FilteredMovieList = () => {\n  const query = useQueryParams();\n  const history = useHistory();\n  const searchTerm = query.get('query') ?? '';\n  const { isLoading, data } = useQuery(\n    ['search', searchTerm],\n    () => searchMovies(searchTerm),\n    // Prevent query when search field is empty\n    { enabled: searchTerm !== '' },\n  );\n  useEffect(() => {\n    if (!searchTerm) {\n      history.push('/');\n    }\n  }, [searchTerm, history]);\n\n  if (isLoading) {\n    return <PageLoader />;\n  } else if (data && data.movies.length) {\n    return <MovieList movies={data.movies} />;\n  } else if (data) {\n    return <NothingFound />\n  } else {\n    return <PageError />;\n  }\n};\n\nexport default FilteredMovieList;\n","import { useLocation } from 'react-router-dom';\n// A custom hook that builds on useLocation to parse\n// the query string for you.\nexport default function useQueryParams() {\n  return new URLSearchParams(useLocation().search);\n}\n","type Props = {\n  painted: boolean;\n};\n\nconst Star = ({ painted }: Props) => {\n  return (\n    <div style={{ width: '20px' }}>\n      <svg viewBox=\"0 0 500 500\" xmlns=\"http://www.w3.org/2000/svg\">\n        <defs>\n          <g id=\"countour\">\n            <path d=\"m2.41245,184.82088l189.83844,0l58.66154,-183.72615l58.66157,183.72615l189.83841,0l-153.58225,113.54771l58.66458,183.72615l-153.58231,-113.5508l-153.58228,113.5508l58.66459,-183.72615l-153.5823,-113.54771z\" />\n          </g>\n        </defs>\n\n        <use\n          xlinkHref=\"#countour\"\n          fill={painted ? 'yellow' : 'transparent'}\n          stroke=\"black\"\n        />\n        <use\n          xlinkHref=\"#countour\"\n          fill=\"transparent\"\n          stroke=\"black\"\n          strokeWidth=\"30\"\n        />\n\n      </svg>\n    </div>\n  );\n};\n\nexport default Star;\n","import styles from './stars.module.scss';\nimport Star from './Star';\n\ntype Props = {\n  rating: number;\n};\nconst Stars = ({ rating }: Props) => {\n  // Mapping over sparse array skips missing values, so we fill it with something\n  return (\n    <div className={styles.wrapper}>\n      {new Array(5).fill(0).map((_, idx) => (\n        <Star key={idx} painted={idx < rating} />\n      ))}\n    </div>\n  );\n};\n\nexport default Stars;\n","import Stars from './Stars';\nimport type { MovieEntry } from '../shared/types';\nimport { getYear, mapRating, formatArrayWithComma } from '../shared/utils';\nimport styles from './movieCard.module.scss';\n\ntype Props = {\n  movie: MovieEntry;\n};\nconst MovieCard = ({ movie }: Props) => {\n  const rating = mapRating(movie.imdb_rating, 10, 5);\n  const directors = Array.isArray(movie.director)\n    ? movie.director\n    : [movie.director];\n  const formattedDirectors = formatArrayWithComma(directors);\n  return (\n    <div className={styles.wrapper} style={{}}>\n      <img className={styles.poster} src={movie.poster} alt={movie.title}></img>\n\n      <div className={styles.textColumn}>\n        <div className={styles.titleRating}>\n          <h2 className={styles.title}>\n            {movie.title} (IMDb: {movie.imdb_rating})\n          </h2>\n          <Stars rating={rating} />\n        </div>\n        <div>\n          {getYear(movie.released_on)} | {movie.length} | {formattedDirectors}\n        </div>\n        <div>cast: {formatArrayWithComma(movie.cast)}</div>\n        <div className={styles.description}>{movie.overview}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieCard;\n","import type { MovieEntry } from './types';\nimport { useRouteMatch } from 'react-router-dom';\n\nexport default function useSlug(movies: MovieEntry[]): MovieEntry | null {\n  const props = useRouteMatch<{ slug?: string }>('/details/:slug');\n  if (!props) return null;\n\n  const slug = props.params.slug;\n  const movie = movies.find(movie => movie.slug === slug);\n  return movie ?? null;\n}\n","import type { MovieEntry } from '../shared/types';\nimport MovieCard from '../MovieCard';\nimport NothingFound from '../NothingFound';\nimport useSlug from '../shared/useSlug';\n\ntype Props = {\n  movies: MovieEntry[];\n};\n\n// It is also possible to reuse react-query call to get a list of movies\n// like it is done in a Backdrop component\nconst MovieFromSlug = ({ movies }: Props) => {\n  const movie = useSlug(movies);\n  if (!movie) return <NothingFound />;\n\n  return <MovieCard movie={movie} />;\n};\n\nexport default MovieFromSlug;\n","import { useQuery } from 'react-query';\nimport { fetchMovies } from '../shared/api';\nimport useSlug from '../shared/useSlug';\nimport styles from './backdrop.module.scss';\n\nconst Backdrop = () => {\n  const { data } = useQuery('movies', fetchMovies);\n  // Workaround conditional hook call\n  const movie = useSlug(data?.movies ?? []);\n  if (!data || !movie) return null;\n  // Might be a good idea to prevent backdrop loading for small screens\n  return (\n    <div className={styles.wrapper}>\n      <div\n        className={styles.backdrop}\n        style={{ backgroundImage: `url(${movie.backdrop})` }}\n      ></div>\n    </div>\n  );\n};\n\nexport default Backdrop;\n","import styles from './pageNotFound.module.scss';\n\nconst PageNotFound = () => (\n  <div className={styles.wrapper}>Sorry, We couldn't find that page :(</div>\n);\n\nexport default PageNotFound;\n","import { Route, Switch } from 'react-router-dom';\nimport { useQuery } from 'react-query';\nimport { fetchMovies } from '../shared/api';\nimport { groupMoviesByGenre } from '../shared/utils';\nimport Header from '../Header';\nimport Wrapper from '../Wrapper';\nimport MovieGroup from '../MovieGroup';\nimport FilteredMovieList from '../FilteredMovieList';\nimport MovieFromSlug from '../MovieFromSlug';\nimport Backdrop from '../Backdrop';\n\nimport PageLoader from '../PageLoader';\nimport PageError from '../PageError';\nimport PageNotFound from '../PageNotFound';\n\nconst App = () => {\n  const { isLoading, data } = useQuery('movies', fetchMovies);\n\n  if (isLoading) return <PageLoader />;\n  if (!data) return <PageError />;\n\n  const groupedMovies = groupMoviesByGenre(data.movies);\n\n  return (\n    <Wrapper>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <MovieGroup groupedMovies={groupedMovies} />\n        </Route>\n        <Route path=\"/search\">\n          <FilteredMovieList />\n        </Route>\n        <Route path=\"/details\">\n          <MovieFromSlug movies={data.movies} />\n          <Backdrop />\n        </Route>\n        <Route path=\"\">\n          <PageNotFound />\n        </Route>\n      </Switch>\n    </Wrapper>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ReactQueryDevtools } from 'react-query/devtools';\n\nconst devMode = process.env.NODE_ENV === 'development';\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <Router>\n        <App />\n        {devMode && <ReactQueryDevtools />}\n      </Router>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}